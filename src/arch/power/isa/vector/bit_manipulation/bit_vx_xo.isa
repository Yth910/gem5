format IntArithOp {
    1292: vgbbd({{
        for (int i = 0; i < 2; ++i) {
            uint8_t mask = 1 << 7;
            for (int j = 0; j < 8; ++j) {
                int dst_ind = (1-i) * 8 + (7-j);
                Vt_ub[dst_ind] = 0;
                for (int k = 0; k < 8; ++k) {
                    int src_ind = (1-i) * 8 + (7-k);
                    Vt_ub[dst_ind] <<= 1;
                    Vt_ub[dst_ind] |= (Vb_ub[src_ind] & mask) ? 1 : 0;
                }
                mask >>= 1;
            }
        }
    }});

    1794: vclzb({{
        for (int i = 0; i < 16; ++i) {
            uint8_t val = Vb_ub[15-i];
            uint8_t n;
            for (n = 0; n < 8; ++n) {
                if (val >> 7)
                    break;
                else
                    val = val << 1;
            }
            Vt_ub[15-i] = n;
        }
    }});

    1858: vclzh({{
        for (int i = 0; i < 8; ++i) {
            uint16_t val = Vb_uh[7-i];
            uint16_t n;
            for (n = 0; n < 16; ++n) {
                if (val >> 15)
                    break;
                else
                    val = val << 1;
            }
            Vt_uh[7-i] = n;
        }
    }});

    1922: vclzw({{
        for (int i = 0; i < 4; ++i) {
            uint32_t val = Vb_uw[3-i];
            uint32_t n;
            for (n = 0; n < 32; ++n) {
                if (val >> 31)
                    break;
                else
                    val = val << 1;
            }
            Vt_uw[3-i] = n;
        }
    }});

    1986: vclzd({{
        for (int i = 0; i < 2; ++i) {
            uint64_t val = Vb_ud[1-i];
            uint64_t n;
            for (n = 0; n < 64; ++n) {
                if (val >> 63)
                    break;
                else
                    val = val << 1;
            }
            Vt_ud[1-i] = n;
        }
    }});

    1795: vpopcntb({{
        for (int i = 0; i < 16; ++i) {
            uint8_t val = Vb_ub[15-i];
            uint8_t n = 0;
            for (int j = 0; j < 8; ++j) {
                n += (val & 1);
                val = val >> 1;
            }
            Vt_ub[15-i] = n;
        }
    }});

    1859: vpopcnth({{
        for (int i = 0; i < 8; ++i) {
            uint16_t val = Vb_uh[7-i];
            uint16_t n = 0;
            for (int j = 0; j < 16; ++j) {
                n += (val & 1);
                val = val >> 1;
            }
            Vt_uh[7-i] = n;
        }
    }});

    1923: vpopcntw({{
        for (int i = 0; i < 4; ++i) {
            uint32_t val = Vb_uw[3-i];
            uint32_t n = 0;
            for (int j = 0; j < 32; ++j) {
                n += (val & 1);
                val = val >> 1;
            }
            Vt_uw[3-i] = n;
        }
    }});

    1987: vpopcntd({{
        for (int i = 0; i < 2; ++i) {
            uint64_t val = Vb_ud[1-i];
            uint64_t n = 0;
            for (int j = 0; j < 64; ++j) {
                n += (val & 1);
                val = val >> 1;
            }
            Vt_ud[1-i] = n;
        }
    }});

    1356: vbpermq({{
        uint64_t perm = 0;
        for (int i = 15; i >= 0; --i) {
            uint8_t index = Vb_ub[i];
            perm = perm << 1;
            if (index < 128) {
                index = 127 - index;
                bool bit = (Va_ub[index/8] >> (index%8)) & 1;
                perm |= bit;
            }
        }
        Vt_ud[1] = perm;
        Vt_ud[0] = 0;
    }});
}