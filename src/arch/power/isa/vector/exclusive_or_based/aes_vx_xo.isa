format IntArithOp{
    1480: vsbox({{
        Crypto aes;
        uint8_t state[16];
        uint8_t result[16];
        for(int i = 0; i < 16; i++){
            state[i] = Va_ub[i];
        }
        aes.aesSubBytes(result, state);
        for(int i = 0; i < 16; i++){
            Vt_ub[i] = result[i];
        }
    }});

    1289: vcipherlast({{
        Crypto aes;
        uint8_t state[16];
        uint8_t RoundKey[16];
        uint8_t vtemp1[16];
        uint8_t vtemp2[16];
        uint8_t result[16];
        for(int i = 0; i < 16; i++){
            state[i] = Va_ub[15-i];
        }
        for(int i = 0; i < 16; i++){
            RoundKey[i] = Vb_ub[15-i];
        }
        aes.aesSubBytes(vtemp1, state);
        aes.aesShiftRows(vtemp2, vtemp1);
        aes.aesAddRoundKey(result, vtemp2, RoundKey);
        for(int i = 0; i < 16; i++){
            Vt_ub[i] = result[15-i];
        }
    }});

    1353: vncipherlast({{
        Crypto aes;
        uint8_t state[16];
        uint8_t RoundKey[16];
        uint8_t vtemp1[16];
        uint8_t vtemp2[16];
        uint8_t result[16];
        for(int i = 0; i < 16; i++){
            state[i] = Va_ub[15-i];
        }
        for(int i = 0; i < 16; i++){
            RoundKey[i] = Vb_ub[15-i];
        }
        aes.aesInvSubBytes(vtemp1, state);
        aes.aesInvShiftRows(vtemp2, vtemp1);
        aes.aesAddRoundKey(result, vtemp2, RoundKey);
        for(int i = 0; i < 16; i++){
            Vt_ub[i] = result[15-i];
        }
    }});

    1288: vcipher({{
        Crypto aes;
        uint8_t state[16];
        uint8_t RoundKey[16];
        uint8_t vtemp1[16];
        uint8_t vtemp2[16];
        uint8_t vtemp3[16];
        uint8_t result[16];
        for(int i = 0; i < 16; i++){
            state[i] = Va_ub[15-i];
        }
        for(int i = 0; i < 16; i++){
            RoundKey[i] = Vb_ub[15-i];
        }
        aes.aesSubBytes(vtemp1, state);
        aes.aesShiftRows(vtemp2, vtemp1);
        aes.aesMixColumns(vtemp3, vtemp2);
        aes.aesAddRoundKey(result, vtemp3, RoundKey);
        for(int i = 0; i < 16; i++){
            Vt_ub[i] = result[15-i];
        }
    }});

    1352: vncipher({{
        Crypto aes;
        uint8_t state[16];
        uint8_t RoundKey[16];
        uint8_t vtemp1[16];
        uint8_t vtemp2[16];
        uint8_t vtemp3[16];
        uint8_t result[16];
        for(int i = 0; i < 16; i++){
            state[i] = Va_ub[15-i];
        }
        for(int i = 0; i < 16; i++){
            RoundKey[i] = Vb_ub[15-i];
        }
        aes.aesInvSubBytes(vtemp1, state);
        aes.aesInvShiftRows(vtemp2, vtemp1);
        aes.aesAddRoundKey(vtemp3, vtemp2, RoundKey);
        aes.aesInvMixColumns(result, vtemp3);
        for(int i = 0; i < 16; i++){
            Vt_ub[i] = result[15-i];
        }
    }});
}
